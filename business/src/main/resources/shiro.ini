[main]
#CREATING DATABASECONNECTION (https://jdbc.postgresql.org/documentation/publicapi/org/postgresql/ds/PGSimpleDataSource.html)
#POSTGRESQL CONNECTION
#dataSource              = org.postgresql.ds.PGSimpleDataSource
#dataSource.serverName   = ec2-54-247-174-238.eu-west-1.compute.amazonaws.com
#dataSource.portNumber   = 5432
#dataSource.databaseName = d29p5ejsnl1ef9
#dataSource.ssl          = true
#dataSource.sslfactory   = org.postgresql.ssl.NonValidatingFactory
#dataSource.user         = zjmyariwmnnlpw
#dataSource.password     = ZXHEX_62cPGC22W-dN8JQiu6va
#MYSQL
dataSource              = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
dataSource.serverName   = eu-cdbr-west-01.cleardb.com
dataSource.portNumber   = 3306
dataSource.databaseName = heroku_1c0e95c679f1150
dataSource.user         = b274bf67b1610b
dataSource.password     = 7857061f
dataSource.autoReconnect= true

#CREATING JDBC-REALM
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
#SETTING DATABASECONNECTION
jdbcRealm.dataSource    = $dataSource
jdbcRealm.permissionsLookupEnabled = true
#QUERIES
    #HAS TO BE SALTED FOR PRODUCTION-USE
jdbcRealm.authenticationQuery   = SELECT password FROM users WHERE loginname = ?
    #Every User can only have one role in this implementation, him-/herselves id
jdbcRealm.userRolesQuery        = SELECT id FROM users WHERE loginname = ?
    #Every Role/User has permission to the notes where he/she is owner of
#POSTGRESQL
#jdbcRealm.permissionsQuery      = SELECT id FROM notes WHERE owner_id = ?::int
#MYSQL
jdbcRealm.permissionsQuery      = SELECT id FROM notes WHERE owner_id = CONVERT( ? , UNSIGNED INTEGER )
#CACHE MANAGER
shiroCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $shiroCacheManager
securityManager.realms = $jdbcRealm, $iniRealm

#Filter have to be defined in [main]=>shiro-bug
authc                   = 	org.apache.shiro.web.filter.authc.FormAuthenticationFilter
logout                  =   org.apache.shiro.web.filter.authc.LogoutFilter
authcBasic              =   org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter

authc.loginUrl          =   /login
authc.successUrl        =   /index.html
logout.redirectUrl      =   /index.html

[users]
root = 123456, admin

[roles]
admin = *

###TODO###
[urls]
#noSessionCreation  = before Rest-Service
#logout             = on logout Url
#ssl                = at logged in communication (ssl-port-specific)
#anon               = login, registration & unsecured content
#authc              = authentication needed
#authcBasic         = PopUp Login
/resources/access/admin/**          = authc, roles[admin]
/resources/access/user/logout       = authc, logout
/resources/access/user/**           = authc
/resources/access/**                = anon
